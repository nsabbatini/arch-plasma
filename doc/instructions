# #######################################################################################
# Basic preparations to install on laptop
#   3. connect ethernet cable using an usb ethernet adaptor
#   4. attach usb with Arch Linux install media and boot from it
# #######################################################################################

# If the fonts are too small
setfont iso01-12x22.psfu.gz

# If keyboard layout is not 'us'
localectl list-keymaps | grep br
loadkeys br-latin1-us

# If not connected with ethernet, connect to wifi
iwctl device list
iwctl station <device> get-networks
iwctl station <device> connect <network>

# Set location and time zone
timedatectl set-ntp true
timedatectl set-timezone America/Sao_Paulo 

# Make sure keyring is updated
pacman -Sy --needed archlinux-keyring

# Clone install files from github
pacman -S git
git clone https://github.com/nsabbatini/arch-plasma.git

######### DON'T FORGET TO MODIFY THE PARAMETERS.SH FILE ##########
# Configure install parameters in file /root/router/bin/parameters.sh and run install script
/root/arch-plasma/bin/arch.sh > >(tee -a /root/arch.stdout.log) 2> >(tee -a /root/arch.stderr.log >&2)

# Save install log to SSD
cp /root/*.log /mnt/root/

# Remove install media and power-off
umount -a
poweroff


# ###################################################################################
# Power-on, login as normal user, then retrive home directory backup from /mnt/backup
# ###################################################################################

# Install yay
mkdir /home/$USER/aur; cd /home/$USER/aur
git clone https://aur.archlinux.org/yay.git
cd yay; makepkg -si

# Install AUR software
yay -S google-chrome etcher-bin otf-ibm-plex papirus-folders-catppuccin-git yubico-authenticator
sudo systemctl enable --now pcscd.socket

# Install printter and scanner drivers; configure printer at http://127.0.0.1:631
yay -S brother-dcp-b7520dw brscan4
# Setup printer in http:localhost:631
#    Admin -> Add printer -> LPD/LPR
#    Connection: lpd://192.168.1.244/binary-p1
#    Name: brlaser, Description: DCP-B7520DW
#    Maker/Manufacturer: Brother, then click on "Brother" and select driver
# Setup scanner:
sudo brsaneconfig4 -a name=brscanner model=Brother_DCP_B7520DW ip=192.168.1.244
brsaneconfig4 -q

# If not recovered from backup, generate ssh keys and copy to other servers
#ssh-keygen -t rsa
#ssh-copy-id narcizo@<server>

# If not done yet, enable sshfs server on castor. Procedure below is from this link:
# https://medium.com/rkttu/set-up-your-ssh-server-in-windows-10-native-way-1aab9021c3a6
scp /home/narcizo/.ssh/id_rsa.pub narci@castor:/C:/Users/narci/.ssh
# In castor, edit file C:\ProgramData\ssh\sshd_config and comment the last two lines (the
# ones starting with "Match Group" and "AuthorizedKeysFile")
# Open powershell with admin elevation and execute the following commands:
cd C:\Users\narci\.ssh
rename id_rsa.pub authorized_keys
$authorizedKeyFilePath = "C:\Users\narci\.ssh\authorized_keys"
icacls.exe $authorizedKeyFilePath /inheritance:r
Get-Acl “$env:ProgramData\ssh\ssh_host_dsa_key” | Set-Acl $authorizedKeyFilePath
New-ItemProperty -Path "HKLM:\SOFTWARE\OpenSSH" -Name DefaultShell -Value "C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe" -PropertyType String -Force

# The install scripts already creates an automount for castor on /mnt/castor but, if needed,
# the following can be used:
mkdir /home/narcizo/castor
REMOTE="narci@192.168.1.42:/G:/Users/Narcizo/"
LOCAL="/home/narcizo/castor"
sshfs $REMOTE $LOCAL -o uid=1000,gid=1000,reconnect,ServerAliveInterval=15,ServerAliveCountMax=3

# ###############################################################
# Support for virtual machines (run all as root)
# ###############################################################

# Create a bridge br0 with STP disabled (to avoid the bridge being advertised on the network)
# This bridge is necessary to have bridge network connections in virt/qemu/kvm VMs
nmcli connection add type bridge ifname br0 stp no

# Make slave ethernet connections to the bridge.
# Lines below are for the two USB-to-ethernet adapters that I have.
nmcli connection add type bridge-slave ifname enp0s20f0u1 master br0
nmcli connection add type bridge-slave ifname enp0s20f0u6u3 master br0

# Find out the connection name
nmcli connection show --active

# Bring the existing connection down. In the command line below,
# the connection name obtained above is 'Wired connection 3'
nmcli connection down 'Wired connection 3'

# Set routing priorities
nmcli con mod bridge-br0 ipv4.route-metric 20
nmcli con mod bridge-br0 ipv6.route-metric 20
nmcli con mod Sabbatini ipv4.route-metric 40
nmcli con mod Sabbatini ipv6.route-metric 40

# Bring the new bridge up
nmcli connection up bridge-br0
# Connect the slave (choose the one that is connected)
nmcli connection up bridge-slave-enp0s20f0u1
#nmcli connection up bridge-slave-enp0s20f0u6u3

# The following script is called by NetworkManager when a network a connection (or disconnection)
# happens, e.g. when we plug or unplug the ethernet adapter from the usb port. If it detects that
# the ethernet adapter was disconnected, then it removes the bridge interface to allow connection to wifi.

cat << EOF > /etc/NetworkManager/dispatcher.d/70-bridge-down.sh
#!/bin/bash

interface=$1
action=$2

[[ $interface == "enp0s20f0u1" && $action == "down" ]] && { nmcli connection down bridge-br0; exit 0; }
[[ $interface == "enp0s20f0u6u3" && $action == "down" ]] && { nmcli connection down bridge-br0; exit 0; }
EOF

###################################################
# The following is to make applications use wayland
###################################################

cat << EOF > /home/narcizo/.config/chrome-flags.conf
--enable-features=UseOzonePlatform
--ozone-platform=wayland
EOF

cat << EOF > /home/narcizo/.config/electron-flags.conf
--enable-features=WaylandWindowDecorations
--ozone-platform-hint=auto
EOF

###################################################
# Miscellaneous
###################################################

# The following is a workaroud for a KDE Plasma bug, which disables bluetooth after login.
# Edit file ~/.config/bluedevilglobalrc and if you have the following (maybe with different MAC)
[Adapters]
4C:1D:96:DB:07:A8_powered=false
# change to
[Adapters]
4C:1D:96:DB:07:A8_powered=true
# then disable write permission on this file to prevent bluedevil from modifying it again:
chmod -w ~/.config/bluedevilglobalrc

# Enable dns resolution with avahi (for .local domain): edit the file /etc/nsswitch.conf
# and change the hosts line to include mdns_minimal [NOTFOUND=return] before resolve
hosts: mymachines mdns_minimal [NOTFOUND=return] resolve [!UNAVAIL=return] files myhostname dns

# Go to Plasma dektop -> System Settings -> Colors & Themes -> Colors
# Install macchiato color scheme and use it
# The papirus-icon-theme and papirus-folder for macchiato were previously installed.
# Change folder color in papirus-dark to match catppuccino-mocha
# https://github.com/catppuccin/papirus-folders
papirus-folders -h
papirus-folders -C cat-mocha-maroon --theme Papirus-Dark

